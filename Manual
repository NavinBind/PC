
 // 21/02/23  //Complete function with Log tested

      #include <stdio.h>
      #define seg_data PORTC
      #define seg_dir TRISC
      #define LT 1000
      #define sim 1

//---------------------------------------Setup-------------------------------------------------------------------
   char Num[] = {0Xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0xff,0xc0,0x8e,0xA3,0xc6,0xE3,0x88,0x92,0xC7,0x87,0x86,0xC1,0xBF,0x8c};
   unsigned int k1_value,k2_value,k3_value,k4_value,D5,D6,D7,D8,D9,D10,i,j,k,D1,D2,D3,D4;

   unsigned int OC,UC,M1,M2,res,res1,res2,res3,button_num,pre_button_num,PBN,Cap,SC;
   unsigned int SV1,SV2,SV3,SV4,SV5,SV6,SV7,SV8,SV9,SV10;
   char SV1_cause,SV2_cause,SV3_cause,SV4_cause,SV5_cause,SV6_cause,SV7_cause,SV8_cause,SV9_cause,SV10_cause;
   sbit seg1 at RB4_bit;sbit seg2 at RB3_bit;sbit seg3 at RB2_bit;sbit seg4 at RB1_bit;sbit k1   at RC4_bit;sbit k2   at RC3_bit;sbit k3   at RC2_bit;sbit k4   at RC1_bit;sbit k5   at RC7_bit;sbit k6   at RC6_bit;sbit k7   at RC0_bit;sbit k8   at RC5_bit;sbit RLY1 at RB5_bit;sbit RLY2 at RB6_bit;sbit Key_com at RA4_bit;
   sbit seg1_dir at TRISB4_bit;sbit seg2_dir at TRISB3_bit;sbit seg3_dir at TRISB2_bit;sbit seg4_dir at TRISB1_bit;sbit k1_dir   at TRISC4_bit;sbit k2_dir   at TRISC3_bit;sbit k3_dir   at TRISC2_bit;sbit k4_dir   at TRISC1_bit;sbit k5_dir   at TRISC7_bit;sbit k6_dir   at TRISC6_bit;sbit k7_dir   at TRISC0_bit;sbit k8_dir   at TRISC5_bit;sbit RLY1_dir at TRISB5_bit;sbit RLY2_dir at TRISB6_bit;sbit com_dir  at TRISA4_bit;sbit Key_com_dir at TRISA4_bit;
   char Log[20];
   sbit SPP at RB7_bit;
   sbit SPP_dir at TRISB7_bit;

//------------------------------------------------------------------------------------------------------------------
   const int analog_pin = 0;
   const int analog_pin1 = 1;
   const float alpha = 0.1;
   const float alpha1 = 0.1;
   double lastAvg = 0.0;
   double lastAvg1 = 0.0;
   int cur_sample = 0;
   int cur_sample1 = 0;
   double cur_avg = 0.0;
   double cur_avg1 = 0.0;


//------------------------------------Functions-------------------------------------------------------------------------
void display(unsigned int, unsigned int, unsigned int, unsigned int);
void increment ();
void data_read();
void data_write();
void compare();
void key_press();
void Current_display();
void voltage_display();
void Relay_state();
void display_log();
void Log_distribute();

//-----------------------------------Setup Function--------------------------------------------------------
 void system_config()
{
  RLY1 = RLY2 = ANSELH = TRISC  = RLY1_dir = RLY2_dir = seg1_dir = seg2_dir = seg3_dir = seg4_dir =  0x00;
  ANSEL  = Key_com_dir = TRISA = 0xFF;
  Button_num = 8;M1 = 0;Cap = 0;i=j=k=0;
  SV1=SV2=SV3=SV4=SV5=SV6=SV7=SV8=SV9=SV10=0;
  data_read();
  Log_distribute();
}
//---------------------------------Loop Function----------------------------------------------------------
void main()
{
  system_config();

   while(1)
  {
   data_read();
   if(Key_com == 0x00){key_press();}
   if(Button_num != 7) {if(pre_button_num ==7){D1=D2=D3=D4=0;pre_button_num = 8;}}
   Relay_state();
   if(D5!=0 && D5!=1 && D5!=2 && D5!=3 && D5!=4 && D5!=5 && D5!=6 && D5!=7 && D5!=8 && D5!=9)
   {D5 = 0;D6 = 0;D7 = 0;D8 = 0;D9 = 0;D10 = 0;}
   switch(Button_num)
     {
       case 1: if(pre_button_num == 11){delay_ms(200);D1++;if (D1 == 10){D1 = 0;} button_num = 11;}else{button_num = PBN;}break;
       case 2: if(pre_button_num == 11){delay_ms(200);D2++;if (D2 == 10){D2 = 0;} button_num = 11;}else{button_num = PBN;}break;
       case 3: if(pre_button_num == 11){delay_ms(200);D3++;if (D3 == 10){D3 = 0;} button_num = 11;}else{button_num = PBN;}break;
       case 4: if(pre_button_num == 11){delay_ms(200);D4++;if (D4 == 10){D4 = 0;} button_num = 11;}
               else{voltage_display();if(M1 >= 500){button_num = PBN;}M1++;break;}break;
                                                
      
      case 5:
                   if(M2>= 500){D1=D2=D3=D4=0;pre_button_num = button_num = 11;}
              else if(M1<= 500){display(d5,d6+10,d7,26);}
              else if(M1>500  ){button_num = PBN;}
                       M1++;

       break;
       
       
       case 6: display(d8,d9+10,d10,26);if(M1 >= 500){button_num = PBN;}M1++;

       break;
       case 7:
              if(SPP)
              {
                Relay_state();
                Current_display();
                pre_button_num = PBN = 7;
                if(i>100)
                {
                  if(res >= OC || res <= UC){Compare();}
                }
                i++;
                M1=0;
               }
                else{RLY1 = 0;RLY2 = 0;button_num = 8;display(20,27,33,33);break;}
              break;

       case 8:if(SPP){pre_button_num = 8;i=0;Cap = 0;M1=0;PBN = 8;M2=0;display(20,21,22,22);}
              else{RLY1 = 0;RLY2 = 0;display(20,27,33,33);}
       break;


       case 11:
                      pre_button_num = 11;
                      display(D1,D2,D3,D4);
                      if(D1==8 && D2==4 && D3==2 && D4==1)
                          {
                           for(i=0; i<LT; i++)
                           {
                            display(D1,D2,D3,D4);
                            key_press();
                             if(button_num == 5)
                                {
                                  Data_read();
                                  D1 = D5;D2 = D6;D3 = D7;
                                  for(i=0; i<LT; i++)
                                    {
                                      key_press();
                                      if(button_num == 1){delay_ms(200);D1++;if (D1 >= 2) {D1 = 0;} button_num = 11;i=0;}
                                      if(button_num == 2){delay_ms(200);D2++;if (D2 >= 10){D2 = 0;} button_num = 11;i=0;}
                                      if(button_num == 3){delay_ms(200);D3++;if (D3 >= 10){D3 = 0;} button_num = 11;i=0;}
                                      if(button_num == 6){break;}
                                      display(D1,D2+10,D3,26);
                                    }
                                eeprom_write(0x00, D1);
                                eeprom_write(0x01, D2);
                                eeprom_write(0x02, D3);
                                delay_ms(20);
                                key_press();
                                }

                                if(button_num == 6)
                                {

                                  Data_read();
                                  D1 = D8;D2 = D9;D3 = D10;
                                  for(i=0; i<LT; i++)
                                    {
                                      key_press();
                                      if(button_num == 1){delay_ms(200);D1++;if (D1 >= 2)  {D1 = 0;} button_num = 11;i=0;}
                                      if(button_num == 2){delay_ms(200);D2++;if (D2 >= 10) {D2 = 0;} button_num = 11;i=0;}
                                      if(button_num == 3){delay_ms(200);D3++;if (D3 >= 10) {D3 = 0;} button_num = 11;i=0;}
                                      if(button_num == 5){break;}
                                      display(D1,D2+10,D3,26);
                                    }
                                eeprom_write(0x03, D1);
                                eeprom_write(0x04, D2);
                                eeprom_write(0x05, D3);
                                delay_ms(20);
                                key_press();
                                }

                           }
                           D1=D2=D3=D4=0;
                           button_num = 8;
                           pre_button_num = 0;
                           data_read();delay_ms(20);
                          }

                       if(D1==1 && D2==2 && D3==4 && D4==8)
                          {
                           delay_ms(1000);
                           display_log();
                           button_num = 8;
                          }

      break;

      case 12:
             PBN = 12;
             for(i=0; i<150; i++)
                      {
                      
                       display(20,21,22,22);
                       key_press();
                       if(button_num == 8 || button_num == 7 || button_num == 6 || button_num == 5 || button_num == 4){M1 = 0;break;}
                      }
             for(i=0; i<150; i++)
                      {
                      
                        if(SC == 0){display(20,21,24,20);}
                        if(SC == 1){display(20,27,24,20);}
                        key_press();
                        if(button_num == 8 || button_num == 7 || button_num == 6 || button_num == 5 || button_num == 4){M1 = 0;break;}
                      }

      break;

      case 13:
             PBN = 13;
             for(i=0; i<150; i++)
                      {
                        
                         display(20,21,22,22);
                         key_press();
                         if(button_num == 8 || button_num == 7 || button_num == 6 || button_num == 5 || button_num == 4){M1 = 0;break;}
                       }
            for(i=0; i<150; i++)
                      {
                        
                         display(20,31,24,20);
                         Cap = 0; key_press();
                         if(button_num == 8 || button_num == 7 || button_num == 6 || button_num == 5 || button_num == 4){M1 = 0;break;}
                       }

      break;

     }
   }
}
void key_press()
{
            if(!key_com){if(button_num != 12 && button_num != 13){button_num = 1;}}
  k1 = 0xFF;if(!key_com){if(button_num != 12 && button_num != 13){button_num = 2;}}
  k2 = 0xFF;if(!key_com){if(button_num != 12 && button_num != 13){button_num = 3;}}
  k3 = 0xFF;if(!key_com){button_num = 4;}

  k4 = 0xFF;if(!key_com){button_num = 5;M1=0;M2++;}
  k5 = 0xFF;if(!key_com){button_num = 6;M1=M2=0;  }
  k6 = 0xFF;if(!key_com){button_num = 7;}
  k7 = 0xFF;if(!key_com){button_num = 8;}
  }
  
  void data_read()
{
 D5  = EEPROM_read(0x00);
 D6  = EEPROM_read(0x01);
 D7  = EEPROM_read(0x02);
 D8  = EEPROM_read(0x03);
 D9  = EEPROM_read(0x04);
 D10 = EEPROM_read(0x05);
 OC = (D5*100)+(D6*10)+D7;
 UC = (D8*100)+(D9*10)+D10;

 SV1_cause = EEPROM_read(0x0A);
 SV2_cause = EEPROM_read(0x0B);
 SV3_cause = EEPROM_read(0x0C);
 SV4_cause = EEPROM_read(0x0D);
 SV5_cause = EEPROM_read(0x0E);
 SV6_cause = EEPROM_read(0x0F);
 SV7_cause = EEPROM_read(0x10);
 SV8_cause = EEPROM_read(0x11);
 SV9_cause = EEPROM_read(0x12);

 SV1 = EEPROM_read(0x13);
 SV2 = EEPROM_read(0x14);
 SV3 = EEPROM_read(0x15);
 SV4 = EEPROM_read(0x16);
 SV5 = EEPROM_read(0x17);
 SV6 = EEPROM_read(0x18);
 SV7 = EEPROM_read(0x19);
 SV8 = EEPROM_read(0x1A);
 SV9 = EEPROM_read(0x1B);


}

void data_write()
{
 EEPROM_write(0x0A, SV1_cause);
 EEPROM_write(0x0B, SV2_cause);
 EEPROM_write(0x0C, SV3_cause);
 EEPROM_write(0x0D, SV4_cause);
 EEPROM_write(0x0E, SV5_cause);
 EEPROM_write(0x0F, SV6_cause);
 EEPROM_write(0x10, SV7_cause);
 EEPROM_write(0x11, SV8_cause);
 EEPROM_write(0x12, SV9_cause);

 EEPROM_write(0x13, SV1);
 EEPROM_write(0x14, SV2);
 EEPROM_write(0x15, SV3);
 EEPROM_write(0x16, SV4);
 EEPROM_write(0x17, SV5);
 EEPROM_write(0x18, SV6);
 EEPROM_write(0x19, SV7);
 EEPROM_write(0x1A, SV8);
 EEPROM_write(0x1B, SV9);

 delay_ms(20);
}

void compare()
{

if (res < UC)
                {
                
                Relay_state();
                if(res == 0)
                {
                  while(k<300)
                  {
                      Current_display();
                      key_press();
                      if(button_num == 8){k = 0;break;}
                   k++;
                   }
                 }
               else  if(res > 0)
                {
                while(k<200)
                {
                    Current_display();
                    key_press();

if(button_num == 8){k = 0;break;}
                 k++;
                 }
                 }

           if (res < UC && button_num != 8)
                  {
                     SV9 = SV8;SV8 = SV7;SV7 = SV6;SV6 = SV5;SV5 = SV4;SV4 = SV3;SV3 = SV2;SV2 = SV1;SV1 = res;
                     Button_num = 13;

SV9_cause = SV8_cause;SV8_cause = SV7_cause;SV7_cause = SV6_cause;SV6_cause = SV5_cause;SV5_cause = SV4_cause;SV4_cause = SV3_cause;SV3_cause = SV2_cause;SV2_cause = SV1_cause;SV1_cause = 2;
                     data_write();
                     delay_ms(20);
                   }
                 k=0;
                }
 else if (res > OC){ Relay_state();

                while(j<200)
                {
                    Current_display();
                    key_press();
                    if(button_num == 8){j = 0;break;}
                 j++;
                }

                 if (res > OC && button_num != 8){


                        if(SC == 0)
                        {
                         SV9 = SV8;SV8 = SV7;SV7 = SV6;SV6 = SV5;SV5 = SV4;SV4 = SV3;SV3 = SV2;SV2 = SV1;SV1 = res;
                         SV9_cause = SV8_cause;SV8_cause = SV7_cause;SV7_cause = SV6_cause;SV6_cause = SV5_cause;SV5_cause = SV4_cause;SV4_cause = SV3_cause;SV3_cause = SV2_cause;SV2_cause = SV1_cause;SV1_cause = 1;
                         Button_num = 12;
                         data_write();
                         delay_ms(20);
                       }
                       if(SC == 1)
                        {
                         SV9 = SV8;SV8 = SV7;SV7 = SV6;SV6 = SV5;SV5 = SV4;SV4 = SV3;SV3 = SV2;SV2 = SV1;
                         if(res >= 200){SV1 = res-200;}
                         else{SV1=res;}
                         SV9_cause = SV8_cause;SV8_cause = SV7_cause;SV7_cause = SV6_cause;SV6_cause = SV5_cause;SV5_cause = SV4_cause;SV4_cause = SV3_cause;SV3_cause = SV2_cause;SV2_cause = SV1_cause;SV1_cause = 3;
                         Button_num = 12;
                         data_write();
                         delay_ms(20);
                       }

                     }
                 j=0;
}
  else if(res >= UC && res <= OC){button_num == 7;}
 }

 void Current_display()
 {
  cur_sample = ADC_read(analog_pin);cur_avg = (cur_sample*alpha) + ((lastAvg)*(1-alpha));lastAvg = cur_avg;
  res1 = cur_avg;

  if(res1 <= 415){res = res1/3.45;}
  if(res1 > 415 && res1 <= 450){res = res1/3.22;}
  if(res1 > 450 && res1 <= 485){res = res1/3.05;}
  if(res1 > 485 && res1 <= 500){res = res1/2.9;}
  if(res1 > 500 ){res = res1/2.8;}


  //res = res1;
  d1 = res/1000%10;d2 = res/100%10;d3 = res/10%10;d4 = res%10;
  if(res >= 200){SC = 1;} else {SC = 0;}
  //display(d1,d2,d3,d4);
  display(d2,d3+10,d4,26);
 }

 void voltage_display()
 {
  cur_sample1 = ADC_read(analog_pin1);cur_avg1 = (cur_sample1*alpha1) + ((lastAvg1)*(1-alpha1));lastAvg1 = cur_avg1;
  res2 = cur_avg1;res3 = (res2/1.715);d1 = res3/1000%10;d2 = res3/100%10;d3 = res3/10%10;d4 = res3%10;
  display(20,d2,d3,d4);
}

void Relay_state()
{
if(button_num == 7 || pre_button_num == 7)
                  {
                     RLY1 = 1;
                   if(Cap == 0){if(i<100){RLY2 = 1;}else{cap = 1;}}
                   else{RLY2 = 0;Cap = 1;}
                   i++;
                  }


else if((button_num != 7 && PBN != 7)|| Button_num ==12 ||Button_num == 13) {RLY1 = 0;RLY2 = 0;Cap = 0;i = 0;}

}

void display_log()
{
int l;
int flash_t = 200;
data_read();
Log_distribute();
  for(l=1; l<10; l++)
  {
    for(i=0; i<flash_t; i++){display(27,32,l,20);} //Saved Value Number
    
    for(i=0; i<flash_t; i++) //Saved Cause
             {
                if(Log[l] == 1){display(20, 0,24,20);}//OC
                if(Log[l] == 2){display(20,31,24,20);}//UC
                if(Log[l] == 3){display(20,27,24,20);}//SC
             }
    for(i=0; i<flash_t; i++) // Saved Current Value
            {
               if(Log[R] == 3 && (Log[R+9]/100%10)< 2){display((Log[R+9]/100%10)+2,(Log[R+9]/10%10)+10,Log[R+9]%10,26);}
               else if(Log[R] == 1 || Log[R] == 2 || Log[R] == 3){display(Log[R+9]/100%10,    (Log[R+9]/10%10)+10,Log[R+9]%10,26);}
               else{display(32,32,32,32);} 
             }

  }
}

void Log_distribute()
{
 Log[1] =  SV1_cause;
 Log[2] =  SV2_cause;
 Log[3] =  SV3_cause;
 Log[4] =  SV4_cause;
 Log[5] =  SV5_cause;
 Log[6] =  SV6_cause;
 Log[7] =  SV7_cause;
 Log[8] =  SV8_cause;
 Log[9] =  SV9_cause;

 Log[10] =  SV1;
 Log[11] =  SV2;
 Log[12] =  SV3;
 Log[13] =  SV4;
 Log[14] =  SV5;
 Log[15] =  SV6;
 Log[16] =  SV7;
 Log[17] =  SV8;
 Log[18] =  SV9;
}

void display(unsigned int w, unsigned int x, unsigned int y, unsigned int z)
{
  if(sim == 1){seg1 = 1;seg2 = 0;seg3 = 0;seg4 = 0;seg_data = Num[w];delay_ms(1);seg1 = 0;seg2 = 1;seg3 = 0;seg4 = 0;seg_data = Num[x];delay_ms(1);seg1 = 0;seg2 = 0;seg3 = 1;seg4 = 0;seg_data = Num[y];delay_ms(1);seg1 = 0;seg2 = 0;seg3 = 0;seg4 = 1;seg_data = Num[z];delay_ms(1);seg1 = 0;seg2 = 0;seg3 = 0;seg4 = 0;seg_data = 0x00;delay_ms(1);}
  if(sim == 0){seg1 = 0;seg2 = 1;seg3 = 1;seg4 = 1;seg_data = Num[w];delay_ms(1);seg1 = 1;seg2 = 0;seg3 = 1;seg4 = 1;seg_data = Num[x];delay_ms(1);seg1 = 1;seg2 = 1;seg3 = 0;seg4 = 1;seg_data = Num[y];delay_ms(1);seg1 = 1;seg2 = 1;seg3 = 1;seg4 = 0;seg_data = Num[z];delay_ms(1);seg1 = 1;seg2 = 1;seg3 = 1;seg4 = 1;seg_data = 0x00;delay_ms(1);}
}
